<?xml version="1.0" encoding="UTF-8" ?>
<configuration scan="true" scanPeriod="60 seconds">
    <!-- 属性文件:在properties/yml文件中找到对应的配置项 -->
    <springProperty scope="context" name="FILE_PATH" source="logging.file.path"/>

    <!-- 日志输出格式 -->
    <property name="LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - [%method] - %msg%n"/>

    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- DEV使用DEBUG级别 -->
    <springProfile name="DEV">
        <appender name="DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                <level>DEBUG</level>
            </filter>
            <append>true</append>
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>${LOG_PATTERN}</pattern>
                <charset>UTF-8</charset>
            </encoder>
            <file>${FILE_PATH}/debug.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <FileNamePattern>${FILE_PATH}/debug-%d{yyyy-MM-dd}.log.gz</FileNamePattern>
                <MaxHistory>15</MaxHistory>
            </rollingPolicy>
        </appender>

        <!-- 异步输出 -->
        <appender name="ASYNC_DEV" class="ch.qos.logback.classic.AsyncAppender">
            <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
            <discardingThreshold>0</discardingThreshold>
            <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
            <queueSize>1024</queueSize>
            <!-- 添加附加的appender,最多只能添加一个 -->
            <appender-ref ref="DEBUG"/>
        </appender>
    </springProfile>

    <!-- UAT使用INFO级别 -->
    <springProfile name="UAT">
        <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                <level>INFO</level>
            </filter>
            <append>true</append>
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>${LOG_PATTERN}</pattern>
                <charset>UTF-8</charset>
            </encoder>
            <file>${FILE_PATH}/info.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <FileNamePattern>${FILE_PATH}/info-%d{yyyy-MM-dd}.log.gz</FileNamePattern>
                <MaxHistory>15</MaxHistory>
            </rollingPolicy>
        </appender>

        <!-- 异步输出 -->
        <appender name="ASYNC_UAT" class="ch.qos.logback.classic.AsyncAppender">
            <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
            <discardingThreshold>0</discardingThreshold>
            <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
            <queueSize>1024</queueSize>
            <!-- 添加附加的appender,最多只能添加一个 -->
            <appender-ref ref="INFO"/>
        </appender>
    </springProfile>

    <!-- PROD使用WARN级别 -->
    <springProfile name="PROD">
        <appender name="WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                <level>WARN</level>
            </filter>
            <append>true</append>
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>${LOG_PATTERN}</pattern>
                <charset>UTF-8</charset>
            </encoder>
            <file>${FILE_PATH}/warn.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <FileNamePattern>${FILE_PATH}/warn-%d{yyyy-MM-dd}.log.gz</FileNamePattern>
                <MaxHistory>15</MaxHistory>
            </rollingPolicy>
        </appender>

        <!-- 异步输出 -->
        <appender name="ASYNC_PROD" class="ch.qos.logback.classic.AsyncAppender">
            <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
            <discardingThreshold>0</discardingThreshold>
            <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
            <queueSize>1024</queueSize>
            <!-- 添加附加的appender,最多只能添加一个 -->
            <appender-ref ref="WARN"/>
        </appender>
    </springProfile>

    <!--<logger name="org.springframework" level="INFO"/>-->

    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <springProfile name="DEV">
            <appender-ref ref="ASYNC_DEV"/>
        </springProfile>
        <springProfile name="WINDOS">
            <appender-ref ref="ASYNC_DEV"/>
        </springProfile>
        <springProfile name="UAT">
            <appender-ref ref="ASYNC_UAT"/>
        </springProfile>
        <springProfile name="PROD">
            <appender-ref ref="ASYNC_PROD"/>
        </springProfile>
    </root>
</configuration>
